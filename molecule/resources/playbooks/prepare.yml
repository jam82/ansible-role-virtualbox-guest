---
# role: ansible-role-virtualbox-guest
# file: molecule/resources/playbooks/prepare.yml

- name: Prepare
  hosts: all
  become: True
  gather_facts: False
  vars:
    epel_enabled: True
    upgrade_enabled: False
  tasks:
    # this is done to save time, just fire all commands
    - name: Set fact for os-specific bootstrapping
      set_fact:
        bootstrap:
          - 'apk add --no-cache bash sudo python3 vim'
          - 'apt-get -y update && apt-get install -y bash sudo python3 python3-apt vim'
          - 'dnf makecache && dnf -y install bash sudo python3 vim'
          - 'pacman -Syy && pacman --noconfirm -S bash sudo python3 vim'
          - 'yum -y makecache && yum -y install bash sudo python3 vim'
          - 'zypper -n update && zypper -n install bash sudo python python-xml python3 python3-xml vim'

    # bootstrap machines for ansible with bash, sudo, python and vim
    - name: Bootstrap machine for ansible (ignore_errors)
      raw: "{{ item }}"
      loop: "{{ bootstrap }}"
      ignore_errors: yes
      tags: ['skip_ansible_lint']

    # gather facts
    - name: Gather facts
      gather_facts:

    - name: Enable EPEL Repository
      block:
        - name: EPEL 7 and earlier
          yum:
            name: 'epel-release'
            state: present
            update_cache: yes
          when: ansible_distribution_major_version <= '7'
        - name: EPEL 8 and later
          dnf:
            name: 'epel-release'
            state: present
            update_cache: yes
          when: ansible_distribution_major_version >= '8'
      when: ansible_distribution == 'CentOS'
        or ansible_distribution == "RedHat"
        and epel_enabled | bool

    - name: Upgrade all packages
      block:
        - name: Upgrade all packages (apk)
          apk:
            available: yes
            update_cache: yes
            upgrade: yes
          when: ansible_pkg_mgr == 'apk'

        - name: Upgrade all packages (apt)
          apt:
            upgrade: dist
            update_cache: yes
            autoremove: yes
          when: ansible_pkg_mgr == 'apt'

        - name: Upgrade all packages (dnf)
          dnf:
            name: '*'
            state: latest
            update_cache: yes
          when: ansible_pkg_mgr == "dnf"
          tags: ['skip_ansible_lint']

        - name: Upgrade all packages (pacman)
          pacman:
            update_cache: yes
            upgrade: yes
          when: ansible_pkg_mgr == 'pacman'

        - name: Upgrade all packages (yum)
          yum:
            name: '*'
            state: latest
            update_cache: yes
          when: ansible_pkg_mgr == 'yum'
          tags: ['skip_ansible_lint']

        - name: Upgrade all packages (zypper)
          zypper:
            name: '*'
            state: latest
            update_cache: yes
          when: ansible_pkg_mgr == 'zypper'
          tags: ['skip_ansible_lint']
      when: upgrade_enabled | bool
